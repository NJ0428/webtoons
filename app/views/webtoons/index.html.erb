

<main class="max-w-7xl mx-auto px-4 py-6">

  <!-- 메인 배너 - 오늘의 추천 웹툰 캐러셀 -->
  <section class="mb-8">
    <div class="relative">
      <h2 class="text-2xl font-bold text-gray-900 mb-4 flex items-center">
        <span class="text-yellow-500 mr-2">⭐</span>
        오늘의 추천 웹툰
      </h2>
      
      <!-- 캐러셀 컨테이너 -->
      <div class="relative overflow-hidden rounded-lg">
        <div id="carousel-container" class="flex transition-transform duration-500 ease-in-out">
          <!-- 캐러셀 아이템들이 여기에 동적으로 생성됩니다 -->
        </div>
        
        <!-- 이전/다음 버튼 -->
        <button id="prev-btn" class="absolute left-4 top-1/2 transform -translate-y-1/2 bg-black bg-opacity-50 hover:bg-opacity-70 text-white p-2 rounded-full transition-all duration-200 z-10">
          <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
          </svg>
        </button>
        <button id="next-btn" class="absolute right-4 top-1/2 transform -translate-y-1/2 bg-black bg-opacity-50 hover:bg-opacity-70 text-white p-2 rounded-full transition-all duration-200 z-10">
          <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
          </svg>
        </button>
        
        <!-- 인디케이터 -->
        <div id="carousel-indicators" class="absolute bottom-4 left-1/2 transform -translate-x-1/2 flex space-x-2">
          <!-- 인디케이터 점들이 여기에 동적으로 생성됩니다 -->
        </div>
      </div>
    </div>
  </section>

  <!-- 요일별 웹툰 탭 -->
  <section class="mb-8">
    <div class="flex justify-center mb-6">
      <div class="flex bg-gray-100 rounded-lg p-1">
        <% 
          days = %w[월 화 수 목 금 토 일]
          # 실제 오늘 요일의 인덱스 계산 (0=월요일, 6=일요일)
          today_index = days.index(@current_day) || 6
        %>
        <% days.each_with_index do |day, index| %>
          <button onclick="switchDay('<%= day %>', this)" 
                  class="day-tab px-6 py-2 rounded-md font-medium transition-colors <%= index == today_index ? 'bg-purple-600 text-white active' : 'text-gray-600 hover:text-purple-600' %>"
                  data-day="<%= day %>">
            <%= day %>
          </button>
        <% end %>
      </div>
    </div>
  </section>

  <!-- 메인 콘텐츠 -->
  <div class="grid grid-cols-1 lg:grid-cols-4 gap-8">
    <!-- 웹툰 그리드 -->
    <div class="lg:col-span-3">
      <div class="flex justify-between items-center mb-6">
        <h2 id="day-title" class="text-2xl font-bold text-gray-900"><%= @current_day %>요일 웹툰</h2>
        <a href="/webtoon" class="text-purple-600 hover:text-purple-700 font-medium flex items-center">
          더보기
          <svg class="w-4 h-4 ml-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
          </svg>
        </a>
      </div>
      
      <div id="webtoon-grid" class="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-5 gap-4">
        <!-- 웹툰 목록이 여기에 동적으로 로드됩니다 -->
      </div>
    </div>

    <!-- 사이드바 -->
    <div class="space-y-6">
      <!-- 인기 급상승 -->
      <div class="bg-white border border-gray-200 rounded-lg p-6">
        <h3 class="font-bold text-lg mb-4 flex items-center">
          <span class="text-red-500 mr-2">🔥</span>
          인기 급상승
        </h3>
        <ul class="space-y-3">
          <% @trending_comics.each_with_index do |comic, index| %>
            <li class="flex items-center hover:bg-gray-50 p-2 rounded cursor-pointer transition-colors duration-200"
                onclick="location.href='/webtoon/list?titleId=<%= comic.id %>&tab=<%= comic.day_of_week %>'">
              <span class="font-bold text-lg mr-3 w-6 text-center <%= index < 3 ? 'text-red-500' : 'text-gray-500' %>">
                <%= index + 1 %>
              </span>
              <div class="w-10 h-12 rounded mr-3 flex-shrink-0 overflow-hidden">
                <img src="https://picsum.photos/40/48?random=<%= comic.id + 200 %>" 
                     alt="<%= comic.title %>" 
                     class="w-full h-full object-cover">
              </div>
              <div class="flex-1 min-w-0">
                <p class="text-sm font-medium text-gray-900 truncate"><%= comic.title %></p>
                <p class="text-xs text-gray-500"><%= comic.author %></p>
                <div class="flex items-center mt-1">
                  <span class="text-xs text-green-600 font-medium">
                    ⭐ <%= comic.rating %>
                  </span>
                  <span class="text-xs text-gray-400 ml-2">
                    👁 <%= number_with_delimiter(comic.view_count) %>
                  </span>
                </div>
              </div>
              <div class="flex items-center">
                <% if index < 3 %>
                  <span class="text-red-500 text-xs">🔥</span>
                <% elsif comic.view_count > 100000 %>
                  <span class="text-orange-500 text-xs">📈</span>
                <% end %>
              </div>
            </li>
          <% end %>
        </ul>
      </div>

      <!-- 완결 웹툰 -->
      <div class="bg-white border border-gray-200 rounded-lg p-6">
        <h3 class="font-bold text-lg mb-4 flex items-center">
          <span class="text-blue-500 mr-2">✨</span>
          완결 웹툰
        </h3>
        <div class="space-y-3">
          <% if @completed_comics&.any? %>
            <% @completed_comics.each do |comic| %>
              <div class="flex items-center hover:bg-gray-50 p-2 rounded cursor-pointer transition-colors duration-200"
                   onclick="location.href='/webtoon/list?titleId=<%= comic.id %>&tab=<%= comic.day_of_week %>'">
                <div class="w-12 h-16 rounded mr-3 flex-shrink-0 overflow-hidden">
                  <img src="https://picsum.photos/48/64?random=<%= comic.id + 300 %>" 
                       alt="<%= comic.title %>" 
                       class="w-full h-full object-cover">
                </div>
                <div class="flex-1 min-w-0">
                  <p class="text-sm font-medium text-gray-900 truncate"><%= comic.title %></p>
                  <p class="text-xs text-gray-500"><%= comic.author %></p>
                  <div class="flex items-center mt-1">
                    <span class="text-xs text-blue-600 font-medium">
                      ⭐ <%= comic.rating %>
                    </span>
                    <span class="text-xs text-gray-400 ml-2">완결</span>
                  </div>
                </div>
              </div>
            <% end %>
          <% else %>
            <% 5.times do |i| %>
              <div class="flex items-center hover:bg-gray-50 p-2 rounded cursor-pointer">
                <div class="w-12 h-16 rounded mr-3 flex-shrink-0 overflow-hidden">
                  <img src="https://picsum.photos/48/64?random=<%= 100 + i %>" 
                       alt="완결 웹툰 <%= i + 1 %>" 
                       class="w-full h-full object-cover">
                </div>
                <div class="flex-1">
                  <p class="text-sm font-medium text-gray-900">완결 웹툰 <%= i + 1 %></p>
                  <p class="text-xs text-gray-500">작가명</p>
                  <div class="flex items-center mt-1">
                    <span class="text-xs text-blue-600 font-medium">⭐ 4.<%= rand(1..9) %></span>
                    <span class="text-xs text-gray-400 ml-2">완결</span>
                  </div>
                </div>
              </div>
            <% end %>
          <% end %>
        </div>
      </div>
    </div>
  </div>

  <!-- 추가 섹션들 -->
  <section class="mt-12">
    <h2 class="text-2xl font-bold text-gray-900 mb-6">장르별 추천</h2>
    <div class="grid grid-cols-2 md:grid-cols-4 lg:grid-cols-6 gap-4">
      <% 
        genres = [
          { name: '로맨스', key: 'romance', emoji: '💕', color: 'from-pink-400 to-red-400' },
          { name: '액션', key: 'action', emoji: '⚔️', color: 'from-orange-400 to-red-500' },
          { name: '판타지', key: 'fantasy', emoji: '🔮', color: 'from-purple-400 to-indigo-500' },
          { name: '일상', key: 'daily', emoji: '☕', color: 'from-green-400 to-blue-400' },
          { name: '개그', key: 'comedy', emoji: '😂', color: 'from-yellow-400 to-orange-400' },
          { name: '스릴러', key: 'thriller', emoji: '🔪', color: 'from-gray-600 to-black' }
        ]
      %>
      <% genres.each do |genre| %>
        <div onclick="location.href='/webtoon/genre/<%= genre[:key] %>'" 
             class="bg-white border border-gray-200 rounded-lg p-4 text-center hover:shadow-md transition-shadow cursor-pointer group">
          <div class="w-16 h-16 bg-gradient-to-br <%= genre[:color] %> rounded-full mx-auto mb-3 flex items-center justify-center text-2xl group-hover:scale-110 transition-transform duration-200">
            <%= genre[:emoji] %>
          </div>
          <p class="font-medium text-gray-900 group-hover:text-purple-600 transition-colors"><%= genre[:name] %></p>
        </div>
      <% end %>
    </div>
  </section>
</main>

<script>
// 오늘 요일 가져오기 (0=일요일, 1=월요일, ..., 6=토요일)
function getTodayKoreanDay() {
  const days = ['일', '월', '화', '수', '목', '금', '토'];
  const today = new Date().getDay();
  return days[today];
}

// 현재 선택된 요일 (서버에서 전달받은 값 또는 오늘 날짜)
let currentDay = '<%= @current_day %>' || getTodayKoreanDay();

// 캐러셀 관련 변수
let currentSlide = 0;
let carouselComics = [];
let carouselInterval;

// 페이지 로드 시 초기 데이터 로드
document.addEventListener('DOMContentLoaded', function() {
  console.log('페이지 로드 시작');
  
  // 먼저 초기 웹툰 목록을 즉시 표시
  displayInitialWebtoons();
  
  // 오늘 요일에 해당하는 탭을 활성화
  const todayTab = document.querySelector(`[data-day="${currentDay}"]`);
  if (todayTab) {
    // 모든 탭 비활성화
    document.querySelectorAll('.day-tab').forEach(tab => {
      tab.classList.remove('bg-purple-600', 'text-white', 'active');
      tab.classList.add('text-gray-600', 'hover:text-purple-600');
    });
    
    // 오늘 탭 활성화
    todayTab.classList.remove('text-gray-600', 'hover:text-purple-600');
    todayTab.classList.add('bg-purple-600', 'text-white', 'active');
  }
  
  // 제목 업데이트
  document.getElementById('day-title').textContent = `${currentDay}요일 웹툰`;
  
  // 캐러셀 초기화 (웹툰 목록 표시 후에)
  setTimeout(() => {
    initializeCarousel();
  }, 100);
  
  // 인기 급상승 새로고침 버튼 이벤트 추가
  addTrendingRefreshButton();
  
  // 5분마다 인기 급상승 자동 업데이트
  setInterval(loadTrendingWebtoons, 5 * 60 * 1000);
  
  console.log('페이지 로드 완료');
});

// 초기 웹툰 목록 표시 (서버에서 전달받은 데이터)
function displayInitialWebtoons() {
  console.log('초기 웹툰 목록 표시 시작');
  const grid = document.getElementById('webtoon-grid');
  
  if (!grid) {
    console.error('웹툰 그리드 엘리먼트를 찾을 수 없습니다.');
    return;
  }
  
  const comics = [
    <% @comics.each do |comic| %>
      {
        id: <%= comic.id %>,
        title: '<%= j comic.title %>',
        author: '<%= j comic.author %>',
        thumbnail: '<%= comic.thumbnail_url %>',
        isNew: <%= comic.is_new %>,
        rating: <%= comic.rating %>,
        viewCount: <%= comic.view_count %>,
        genre: '<%= comic.genre %>'
      },
    <% end %>
  ];
  
  console.log('로드된 웹툰 수:', comics.length);
  console.log('현재 요일:', currentDay);
  
  // 즉시 웹툰 목록 표시
  displayWebtoons(comics, currentDay);
  
  console.log('초기 웹툰 목록 표시 완료');
}

// 요일 전환 함수
function switchDay(day, buttonElement) {
  // 이전 활성 탭 비활성화
  document.querySelectorAll('.day-tab').forEach(tab => {
    tab.classList.remove('bg-purple-600', 'text-white', 'active');
    tab.classList.add('text-gray-600', 'hover:text-purple-600');
  });
  
  // 새 탭 활성화
  buttonElement.classList.remove('text-gray-600', 'hover:text-purple-600');
  buttonElement.classList.add('bg-purple-600', 'text-white', 'active');
  
  // 현재 요일 업데이트
  currentDay = day;
  
  // 제목 업데이트
  document.getElementById('day-title').textContent = `${day}요일 웹툰`;
  
  // 웹툰 목록 로드
  loadWebtoons(day);
}

// API에서 웹툰 목록 로드 함수
async function loadWebtoons(day) {
  const grid = document.getElementById('webtoon-grid');
  
  // 로딩 표시
  grid.innerHTML = '<div class="col-span-full text-center py-8 text-gray-500">로딩 중...</div>';
  
  try {
    const response = await fetch(`/api/webtoons/by_day/${day}`);
    const comics = await response.json();
    
    setTimeout(() => {
      displayWebtoons(comics, day);
    }, 300);
  } catch (error) {
    console.error('웹툰 데이터 로드 실패:', error);
    grid.innerHTML = '<div class="col-span-full text-center py-8 text-red-500">데이터를 불러오는데 실패했습니다.</div>';
  }
}

// 웹툰 목록 표시 함수
function displayWebtoons(comics, day) {
  const grid = document.getElementById('webtoon-grid');
  
  if (!grid) {
    console.error('웹툰 그리드 엘리먼트를 찾을 수 없습니다.');
    return;
  }
  
  if (comics.length === 0) {
    grid.innerHTML = '<div class="col-span-full text-center py-8 text-gray-500">해당 요일에 연재되는 웹툰이 없습니다.</div>';
    return;
  }
  
  console.log(`${day}요일 웹툰 ${comics.length}개 표시 중...`);
  
  grid.innerHTML = comics.map((comic, index) => `
    <div class="group cursor-pointer">
      <a href="/webtoon/list?titleId=${comic.id}&tab=${day}" class="block">
        <div class="relative overflow-hidden rounded-lg mb-3">
          <img src="https://picsum.photos/200/300?random=${comic.id || index + 50}" 
               alt="${comic.title}" 
               class="aspect-[3/4] w-full object-cover group-hover:scale-105 transition-transform duration-200"
               loading="lazy">
          ${comic.isNew ? '<div class="absolute top-2 left-2 bg-red-500 text-white text-xs px-2 py-1 rounded">UP</div>' : ''}
          <div class="absolute bottom-2 right-2 bg-black bg-opacity-70 text-white text-xs px-2 py-1 rounded">
            ⭐ ${comic.rating}
          </div>
        </div>
        <h3 class="font-bold text-gray-900 text-sm mb-1 line-clamp-2 group-hover:text-purple-600 transition-colors">
          ${comic.title}
        </h3>
        <p class="text-gray-600 text-xs">${comic.author}</p>
        <p class="text-gray-500 text-xs mt-1">${comic.genre} • 조회수 ${formatViewCount(comic.viewCount)}</p>
      </a>
    </div>
  `).join('');
  
  console.log(`웹툰 목록 표시 완료: ${comics.length}개`);
}

// 조회수 포맷팅 함수
function formatViewCount(count) {
  if (count >= 1000000) {
    return Math.floor(count / 100000) / 10 + 'M';
  } else if (count >= 1000) {
    return Math.floor(count / 100) / 10 + 'K';
  }
  return count.toString();
}

// 인기 급상승 새로고침 버튼 추가
function addTrendingRefreshButton() {
  const trendingHeader = document.querySelector('.bg-white .font-bold');
  if (trendingHeader && trendingHeader.textContent.includes('인기 급상승')) {
    const refreshButton = document.createElement('button');
    refreshButton.innerHTML = '🔄';
    refreshButton.className = 'ml-2 text-gray-400 hover:text-gray-600 transition-colors duration-200 text-sm';
    refreshButton.title = '인기 급상승 새로고침';
    refreshButton.onclick = loadTrendingWebtoons;
    trendingHeader.appendChild(refreshButton);
  }
}

// 인기 급상승 웹툰 로드
async function loadTrendingWebtoons() {
  try {
    const response = await fetch('/api/webtoons/trending');
    const trendingComics = await response.json();
    
    updateTrendingList(trendingComics);
  } catch (error) {
    console.error('인기 급상승 데이터 로드 실패:', error);
  }
}

// 인기 급상승 목록 업데이트
function updateTrendingList(trendingComics) {
  const trendingList = document.querySelector('.bg-white ul');
  if (!trendingList) return;
  
  trendingList.innerHTML = trendingComics.map(comic => `
    <li class="flex items-center hover:bg-gray-50 p-2 rounded cursor-pointer transition-colors duration-200"
        onclick="location.href='/webtoon/list?titleId=${comic.id}&tab=${comic.dayOfWeek}'">
      <span class="font-bold text-lg mr-3 w-6 text-center ${comic.isTopThree ? 'text-red-500' : 'text-gray-500'}">
        ${comic.rank}
      </span>
      <div class="w-10 h-12 rounded mr-3 flex-shrink-0 overflow-hidden">
        <img src="https://picsum.photos/40/48?random=${comic.id + 200}" 
             alt="${comic.title}" 
             class="w-full h-full object-cover">
      </div>
      <div class="flex-1 min-w-0">
        <p class="text-sm font-medium text-gray-900 truncate">${comic.title}</p>
        <p class="text-xs text-gray-500">${comic.author}</p>
        <div class="flex items-center mt-1">
          <span class="text-xs text-green-600 font-medium">
            ⭐ ${comic.rating}
          </span>
          <span class="text-xs text-gray-400 ml-2">
            👁 ${formatViewCount(comic.viewCount)}
          </span>
        </div>
      </div>
      <div class="flex items-center">
        ${comic.isTopThree ? '<span class="text-red-500 text-xs">🔥</span>' : 
          (comic.viewCount > 100000 ? '<span class="text-orange-500 text-xs">📈</span>' : '')}
      </div>
    </li>
  `).join('');
}

// ===== 캐러셀 관련 함수들 =====

// 캐러셀 초기화
async function initializeCarousel() {
  try {
    // 추천 웹툰 데이터 로드 (인기 급상승 웹툰 사용)
    const response = await fetch('/api/webtoons/trending');
    carouselComics = await response.json();
    
    // 캐러셀이 비어있으면 기본 데이터 사용
    if (carouselComics.length === 0) {
      carouselComics = getDefaultCarouselData();
    }
    
    // 캐러셀 렌더링
    renderCarousel();
    
    // 자동 슬라이드 시작
    startAutoSlide();
    
    // 이벤트 리스너 추가
    addCarouselEventListeners();
    
  } catch (error) {
    console.error('캐러셀 초기화 실패:', error);
    carouselComics = getDefaultCarouselData();
    renderCarousel();
  }
}

// 기본 캐러셀 데이터
function getDefaultCarouselData() {
  return [
    {
      id: 1,
      title: '참교육',
      author: '채용택',
      description: '교권을 되찾기 위한 교사들의 참교육 이야기',
      rating: 9.4,
      viewCount: 2100000,
      genre: '액션',
      isNew: true
    },
    {
      id: 2,
      title: '전지적 독자 시점',
      author: '싱숑',
      description: '소설 속 세계가 현실이 된 독자의 이야기',
      rating: 9.6,
      viewCount: 2300000,
      genre: '판타지',
      isNew: false
    },
    {
      id: 3,
      title: '나 혼자만 레벨업',
      author: 'DUBU',
      description: '최약체 헌터에서 최강자로 성장하는 성진우의 이야기',
      rating: 9.7,
      viewCount: 2500000,
      genre: '판타지',
      isNew: false
    },
    {
      id: 4,
      title: '여신강림',
      author: '야옹이',
      description: '메이크업으로 변신한 소녀의 로맨스 이야기',
      rating: 9.3,
      viewCount: 2200000,
      genre: '로맨스',
      isNew: false
    },
    {
      id: 5,
      title: '화산귀환',
      author: '비가',
      description: '화산파 제자가 과거로 돌아가 펼치는 무협 이야기',
      rating: 9.3,
      viewCount: 1700000,
      genre: '무협',
      isNew: false
    }
  ];
}

// 캐러셀 렌더링
function renderCarousel() {
  const container = document.getElementById('carousel-container');
  const indicators = document.getElementById('carousel-indicators');
  
  if (!container || !indicators) return;
  
  // 캐러셀 아이템 생성
  container.innerHTML = carouselComics.map((comic, index) => `
    <div class="w-full flex-shrink-0 relative">
      <div class="relative h-80 bg-gradient-to-r from-purple-600 via-blue-600 to-indigo-700 rounded-lg overflow-hidden">
        <div class="absolute inset-0 bg-black bg-opacity-30"></div>
        <div class="absolute inset-0 flex items-center">
          <div class="flex w-full max-w-6xl mx-auto px-8">
            <!-- 왼쪽: 텍스트 정보 -->
            <div class="flex-1 text-white z-10">
              <div class="max-w-lg">
                ${comic.isNew ? '<span class="inline-block bg-red-500 text-white text-sm px-3 py-1 rounded-full mb-3 font-medium">NEW</span>' : ''}
                <h3 class="text-4xl font-bold mb-3">${comic.title}</h3>
                <p class="text-xl opacity-90 mb-2">작가: ${comic.author}</p>
                <p class="text-lg opacity-80 mb-4 leading-relaxed">${comic.description || '흥미진진한 스토리가 펼쳐집니다.'}</p>
                <div class="flex items-center space-x-6 mb-6">
                  <div class="flex items-center">
                    <span class="text-yellow-400 mr-1">⭐</span>
                    <span class="font-semibold">${comic.rating}</span>
                  </div>
                  <div class="flex items-center">
                    <span class="text-blue-300 mr-1">👁</span>
                    <span>${formatViewCount(comic.viewCount)}</span>
                  </div>
                  <span class="bg-white bg-opacity-20 px-3 py-1 rounded-full text-sm">${comic.genre}</span>
                </div>
                <button onclick="location.href='/webtoon/list?titleId=${comic.id}'" 
                        class="bg-white text-purple-600 px-8 py-3 rounded-lg font-semibold hover:bg-opacity-90 transition-all duration-200 transform hover:scale-105">
                  지금 읽기
                </button>
              </div>
            </div>
            
            <!-- 오른쪽: 썸네일 이미지 -->
            <div class="flex-shrink-0 ml-8">
              <div class="w-48 h-64 rounded-lg overflow-hidden shadow-2xl transform rotate-3 hover:rotate-0 transition-transform duration-300">
                <img src="https://picsum.photos/300/400?random=${comic.id + 400}" 
                     alt="${comic.title}" 
                     class="w-full h-full object-cover">
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  `).join('');
  
  // 인디케이터 생성
  indicators.innerHTML = carouselComics.map((_, index) => `
    <button onclick="goToSlide(${index})" 
            class="w-3 h-3 rounded-full transition-all duration-200 ${index === currentSlide ? 'bg-white' : 'bg-white bg-opacity-50 hover:bg-opacity-75'}">
    </button>
  `).join('');
}

// 슬라이드 이동
function goToSlide(slideIndex) {
  currentSlide = slideIndex;
  updateCarouselPosition();
  updateIndicators();
  
  // 자동 슬라이드 재시작
  clearInterval(carouselInterval);
  startAutoSlide();
}

// 다음 슬라이드
function nextSlide() {
  currentSlide = (currentSlide + 1) % carouselComics.length;
  updateCarouselPosition();
  updateIndicators();
}

// 이전 슬라이드
function prevSlide() {
  currentSlide = (currentSlide - 1 + carouselComics.length) % carouselComics.length;
  updateCarouselPosition();
  updateIndicators();
}

// 캐러셀 위치 업데이트
function updateCarouselPosition() {
  const container = document.getElementById('carousel-container');
  if (container) {
    container.style.transform = `translateX(-${currentSlide * 100}%)`;
  }
}

// 인디케이터 업데이트
function updateIndicators() {
  const indicators = document.querySelectorAll('#carousel-indicators button');
  indicators.forEach((indicator, index) => {
    if (index === currentSlide) {
      indicator.classList.remove('bg-opacity-50', 'hover:bg-opacity-75');
      indicator.classList.add('bg-white');
    } else {
      indicator.classList.remove('bg-white');
      indicator.classList.add('bg-opacity-50', 'hover:bg-opacity-75');
    }
  });
}

// 자동 슬라이드 시작
function startAutoSlide() {
  carouselInterval = setInterval(() => {
    nextSlide();
  }, 5000); // 5초마다 자동 전환
}

// 캐러셀 이벤트 리스너 추가
function addCarouselEventListeners() {
  const prevBtn = document.getElementById('prev-btn');
  const nextBtn = document.getElementById('next-btn');
  const carouselContainer = document.querySelector('#carousel-container').parentElement;
  
  if (prevBtn) {
    prevBtn.addEventListener('click', () => {
      prevSlide();
      clearInterval(carouselInterval);
      startAutoSlide();
    });
  }
  
  if (nextBtn) {
    nextBtn.addEventListener('click', () => {
      nextSlide();
      clearInterval(carouselInterval);
      startAutoSlide();
    });
  }
  
  // 마우스 호버 시 자동 슬라이드 일시정지
  if (carouselContainer) {
    carouselContainer.addEventListener('mouseenter', () => {
      clearInterval(carouselInterval);
    });
    
    carouselContainer.addEventListener('mouseleave', () => {
      startAutoSlide();
    });
  }
  
  // 키보드 네비게이션
  document.addEventListener('keydown', (e) => {
    if (e.key === 'ArrowLeft') {
      prevSlide();
      clearInterval(carouselInterval);
      startAutoSlide();
    } else if (e.key === 'ArrowRight') {
      nextSlide();
      clearInterval(carouselInterval);
      startAutoSlide();
    }
  });
}


</script>